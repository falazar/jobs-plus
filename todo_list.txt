
/*
REF: https://www.indeed.com/advanced_search
// https://www.indeed.com/jobs?as_and=senior+software+educational&as_phr=&as_any=&as_not=&as_ttl=senior&as_cmp=&jt=fulltime&st=&salary=160000&radius=100&l=Austin&fromage=any&limit=50&sort=&psf=advsrch&from=advancedsearch&vjk=e458ca6335b2b4e9
// 50 results per page, can scrape super fast.

DONE TODOLIST:
    DONE - Add a basic search.
    DONE - implement mongoose, and typegoose to connect to local mongodb.
    DONE - Use ObjectId types, and proper return types.
    DONE - Add an Indeed job list scraper.
    DONE - Add Salary Ranges to Job object.
    DONE - Fill out Job Class.
    DONE - Add a cron ability to run daily.
    DONE - Indeed Job Page scraper.
    not needed - Indeed Company Page scraper
    DONE - Create applications page.
    DONE - LinkedIn scrapers
    DONE - Reformat all applications page to look like spreadsheet
    DONE - Disable semicolons on the end.
    DONE - Job Filter by Salaries.
    DONE - Disable console.log warning.
    DONE -  Add userJobResponses to save user responding to a posting.
    DONE - Add prettier and run.
    DONE - Filter jobs by date, default 1 week.


    Add ability to mark as companydeclined or userdeclined for new status.

TODO
    Add applicationAction object and allow new creation
    Allow manual creation of job, (for outside sourced ones)
    Add stats on applications page, show how many jobs you applied avg every business day, and goal suggestion for today
    Job Filter OUT multiple job keywords. advanced search
    Job Filter on multiple job titles.
    Start basic code testing.
    Match to previous duplicate postings, yuck
    Fill out Company Class.
        Company List editor - edit to add sector on.
        Show Company list.
        exclude companies we dont want to see.
    Fill out User class.
    How do we pass user id thru the site.
    Do login part.
    Add paging on search results.
    Show stats, like avg salary for jobs per day, excluding ones we dont want.
    Show stats - how many jobs for each language, java, node, javascript, python, php and salary ranges?
    Export or print page to file Unemployment, with Texas as an example.


    Ref populate references - how scalable are the underlying queries?
    https://stackoverflow.com/questions/64560563/typegoose-find-on-model-does-not-return-reference-array-fields
    Typegoose REF: https://typegoose.github.io/typegoose/docs/guides/quick-start-guide/

    REF: https://javascript.plainenglish.io/improving-mongoose-model-with-typescript-9a349f41c71

*/